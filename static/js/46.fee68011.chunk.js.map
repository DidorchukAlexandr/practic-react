{"version":3,"file":"static/js/46.fee68011.chunk.js","mappings":"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","sources":["webpack://practic-react/./src/components/Modal/modal.module.scss?2290","components/Modal/Modal.jsx","webpack://practic-react/./src/components/modules/PostsSearch/PostsSearchForm/posts-search-form.module.scss?9c2a","components/modules/PostsSearch/PostsSearchForm/PostsSearchForm.jsx","webpack://practic-react/./src/components/modules/PostsSearch/posts-search.module.scss?32c8","components/modules/PostsSearch/PostsSearch.jsx","webpack://practic-react/./src/pages/PostsPage/post-page.module.scss?5a0a","pages/PostsPage/PostPage.jsx","shared/styles/api/posts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"modal_overlay__gtXc2\",\"modal\":\"modal_modal__e093m\",\"close\":\"modal_close__WlIUH\"};","import { Component } from \"react\";\nimport { createPortal } from \"react-dom\";\n\nimport styles from \"./modal.module.scss\";\n\n\nconst modalRoot = document.getElementById(\"modal-root\")\nclass Modal extends Component {\n\n    componentDidMount() {\n        document.body.addEventListener(\"keydown\", this.handleClose)\n    }\n\n    componentWillUnmount() {\n    document.body.removeEventListener(\"keydown\", this.handleClose)\n    }\n    \n    handleClose = ({target, currentTarget, code}) => {\n        if (target === currentTarget || code === \"Escape\") {\n            this.props.close()\n        }\n    }\n\n    render() {\n        const { children, close } = this.props;\n\n        return createPortal ((\n            <div onClick={this.handleClose} className={styles.overlay}>\n                <div className={styles.modal}>\n                    <span onClick={close} className={styles.close}>X</span>\n                    {children}\n                </div>\n        </div>\n        ), modalRoot)\n}\n}\nexport default Modal;","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"posts-search-form_input__qeYgI\",\"button\":\"posts-search-form_button__Cv887\"};","import { Component } from 'react';\nimport styles from \"./posts-search-form.module.scss\"\nclass PostsSearchForm extends Component {\n    state = {\n    search: \"\"\n    }\n     \n    handleChange = ({ target }) => {\n        const { name, value, checked, type } = target;\n        const newValue = type === \"checkbox\" ? checked : value;\n        this.setState({\n            [name]: newValue\n        })\n    }\n    \n    handleSubmit = (e) => {\n        e.preventDefault();\n        const { onSubmit } = this.props;\n        onSubmit({ ...this.state });\n        this.reset();\n    }\n    \n    reset() {\n        this.setState({\n            search: \"\"\n        })\n    }\n\n    render() {\n\n        const { search } = this.state;\n\n        return (\n            <form  onSubmit={this.handleSubmit}>\n                <input\n                    className={styles.input}\n                    name='search'\n                    value={search}\n                    onChange={this.handleChange}\n                    placeholder='Search post' \n                    required\n                /> \n                <button className={styles.button} type='submit'>Search</button>\n            </form>\n        )\n    }\n}\n\nexport default PostsSearchForm;","// extracted by mini-css-extract-plugin\nexport default {\"heading\":\"posts-search_heading__GbSt-\",\"list\":\"posts-search_list__hVYzP\",\"item\":\"posts-search_item__MxOh+\",\"itemTitle\":\"posts-search_itemTitle__1ID-s\",\"error\":\"posts-search_error__Cflpi\",\"detailsTitle\":\"posts-search_detailsTitle__3x0Ve\",\"detailsContent\":\"posts-search_detailsContent__EA9w4\",\"button\":\"posts-search_button__RXpbq\"};","import { useEffect, useState } from \"react\";\nimport Modal from \"../../Modal/Modal\";\nimport PostsSearchForm from \"./PostsSearchForm/PostsSearchForm\";\nimport { searchPosts } from \"shared/styles/api/posts\";\nimport styles from \"./posts-search.module.scss\";\n\n\nconst PostsSearch = () => {\n    const [search, setSearch] = useState(\"\");\n    const [items, setItems] = useState([]);\n    const [status, setStatus] = useState(\"idle\");\n    const [error, setError] = useState(null);\n    const [page, setPage] = useState(1);\n    const [showModal, setShowModal] = useState(false);\n    const [postDetails, setPostDetails] = useState({});\n\n    useEffect(() => {\n      \n        const fetchPosts = async() => {\n            try {\n                setStatus(\"pending\");\n                const { data } = await searchPosts(search, page);\n                setItems(prevItems => [...prevItems, ...data]);\n                setStatus(\"success\"); \n            }\n            catch ({ response }) {\n                const errorMessage = response.data.message || \"Cannot fetch posts\";\n                setError(errorMessage);\n                setStatus(\"error\");\n            }\n        }\n         if (search) {\n             fetchPosts()\n               \n        }\n        \n    }, [search, page])\n\n    const updateSearch = ({ search }) => {\n        setSearch(search);\n        setPage(1);\n        setItems([]);\n    }\n\n    const loadMore = () => setPage(prevPage => prevPage + 1);\n     \n    const onShowModal = ({title, body}) => {\n        setShowModal(true);\n        setPostDetails({ title, body });\n    }\n\n    const onCloseModal = () => {\n        setShowModal(false);\n        setPostDetails({});\n}\n\n     const elements = items.map(({ id, title, body }) => (\n            <li key={id} onClick={() => onShowModal({title, body})} className={styles.item}>\n                <h4 className={styles.itemTitle}>{title}</h4>\n                <p>{body}</p>\n    </li>\n))\n\n        return (\n            <>\n                {showModal && (<Modal close={onCloseModal}>\n                    <h3 className={styles.detailsTitle}>{postDetails.title}</h3>\n                    <p className={styles.detailsContent}>{postDetails.body}</p>\n                </Modal>)}\n                <h2 className={styles.heading}>Posts</h2>\n                <PostsSearchForm onSubmit={updateSearch} />\n                {status === \"pending\" && <p>... Loading</p>}\n                {error && <p className={styles.error}>{error}</p>}\n                <ul className={styles.list}>{elements}</ul>\n                {status === \"success\" && !items.length && <p>Nothing found</p>}\n                {Boolean(items.length) && <button onClick={loadMore} className={styles.button} type=\"button\">Load more</button>}\n            </>\n    )\n\n}\nexport default PostsSearch;\n\n// class PostsSearch extends Component {\n//     state = {\n//         items: [],\n//         status: \"idle\",\n//         error: null,\n//         search: \"\",\n//         page: 1,\n//         showModal: false,\n//         postDetails: {}\n//     }\n    \n//     componentDidUpdate(_, prevState) {\n//         const { search, page } = this.state;\n//         if (search !== prevState.search || page !== prevState.page) {\n//             this.fetchPosts();\n//         }\n//     }\n\n//     async fetchPosts() {\n//         try {\n//             const { search, page } = this.state;\n//             this.setState({ status: \"pending\" });\n//             const { data } = await searchPosts(search, page);\n//             this.setState(({ items }) => ({\n//                 items: [...items, ...data],\n//                 status: \"success\"\n//             }));\n//         }\n//             catch ({ response }) {\n//                 this.setState({\n//                     error: response.data.message || \"Cannot fetch posts\",\n//                     status: \"error\"\n//                 })\n//             }\n//     }\n    \n//     updateSearch = ({ search }) => {\n//         this.setState({ search, items: [], page: 1 })\n//     }\n    \n//     loadMore = () => {\n//         this.setState(({ page }) => ({\n//             page: page + 1\n//         }))\n//     }\n\n//     showModal = ({title, body}) => {\n//         this.setState({\n//             showModal: true,\n//             postDetails: {\n//                 title,\n//                 body,\n//             }\n// })\n//     }\n\n//     closeModal = () => {\n//         this.setState({\n//             showModal: false,\n//             postDetails: {}\n//         })\n//     }\n\n//     render() {\n//         const { items, status, error, showModal, postDetails } = this.state;\n\n//         const elements = items.map(({ id, title, body }) => (\n//             <li key={id} onClick={() => this.showModal({title, body})} className={styles.item}>\n//                 <h4 className={styles.itemTitle}>{title}</h4>\n//                 <p>{body}</p>\n//     </li>\n// ))\n\n//         return (\n//             <>\n//                 {showModal && (<Modal close={this.closeModal}>\n//                     <h3 className={styles.detailsTitle}>{postDetails.title}</h3>\n//                     <p className={styles.detailsContent}>{postDetails.body}</p>\n//                 </Modal>)}\n//                 <h2 className={styles.heading}>Posts</h2>\n//                 <PostsSearchForm onSubmit={this.updateSearch} />\n//                 {status === \"pending\" && <p>... Loading</p>}\n//                 {error && <p className={styles.error}>{error}</p>}\n//                 <ul className={styles.list}>{elements}</ul>\n//                 {status === \"success\" && !items.length && <p>Nothing found</p>}\n//                 {Boolean(items.length) && <button onClick={this.loadMore} type=\"button\">Load more</button>}\n//             </>\n//     )\n// }\n// }\n\n// export default PostsSearch;","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"post-page_title__Ebbqv\"};","\nimport PostsSearch from \"components/modules/PostsSearch/PostsSearch\";\nimport styles from \"./post-page.module.scss\"\nconst PostPage = () => {\n\n    return (\n        <div className=\"container\">\n            <h1 className={styles.title}>Post page</h1>\n            <PostsSearch />\n        </div>\n    )\n}\nexport default PostPage;","import axios from 'axios';\n\nconst postsInstace = axios.create({\n  baseURL: 'https://jsonplaceholder.typicode.com/posts',\n});\n\nexport const getPosts = () => {\n  return postsInstace.get('/');\n};\n\nexport const searchPosts = (q, _page = 1) => {\n  return postsInstace.get('/', {\n    params: {\n      q,\n      _page,\n      _limit: 4,\n    },\n  });\n};\n\nexport const getPostById = id => {\n  return postsInstace.get(`/${id}`);\n};\n\nexport const getPostComments = id => {\n  return postsInstace.get(`/${id}/comments`);\n};\n"],"names":["modalRoot","document","getElementById","Modal","handleClose","target","currentTarget","code","props","close","body","addEventListener","this","removeEventListener","children","createPortal","onClick","className","styles","Component","PostsSearchForm","state","search","handleChange","name","value","checked","newValue","type","setState","handleSubmit","e","preventDefault","onSubmit","reset","onChange","placeholder","required","useState","setSearch","items","setItems","status","setStatus","error","setError","page","setPage","showModal","setShowModal","postDetails","setPostDetails","useEffect","fetchPosts","searchPosts","data","prevItems","response","errorMessage","message","elements","map","id","title","onShowModal","length","Boolean","prevPage","postsInstace","axios","baseURL","getPosts","get","q","_page","params","_limit","getPostById","getPostComments"],"sourceRoot":""}