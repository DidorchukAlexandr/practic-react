{"version":3,"file":"static/js/994.b44b66fc.chunk.js","mappings":"mJACA,MAAsB,oB,SCMtB,EAJe,SAAC,GAAiC,IAAD,IAA/BA,KAAAA,OAA+B,MAAxB,SAAwB,EAAdC,EAAc,EAAdA,SAC9B,OAAO,mBAAQC,UAAWC,EAAYH,KAAMA,EAArC,SAA4CC,GACtD,C,8ECJD,EAA4B,8BAA5B,EAAkE,0B,qBCUlE,EATkB,SAAC,GAAyB,IAAvBG,EAAsB,EAAtBA,MAAUC,GAAY,YACvC,OACI,iBAAKH,UAAWC,EAAhB,WACI,2BAAQC,KACR,0BAAOF,UAAWC,GAAkBE,MAG/C,C,iFCRD,EAAwB,6B,gDCKxB,EANqB,CACnBC,KAAM,GACNC,MAAO,GACPC,SAAU,ICqBZ,EAxBe,CACbF,KAAM,CACJF,MAAO,YACPE,KAAM,OACNN,KAAM,OACNS,UAAU,EACVC,YAAa,aAEfH,MAAO,CACLH,MAAO,aACPE,KAAM,QACNN,KAAM,QACNS,UAAU,EACVC,YAAa,cAEfF,SAAU,CACRJ,MAAO,gBACPE,KAAM,WACNN,KAAM,WACNS,UAAU,EACVC,YAAa,kBCnBjB,EAAuB,4B,SCoBvB,EAfqB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACpB,GAA8CC,EAAAA,EAAAA,GAAQ,CAACC,aAAAA,EAAcF,SAAAA,IAA7DG,EAAR,EAAQA,MAAOC,EAAf,EAAeA,aAAcC,EAA7B,EAA6BA,aAErBV,EAA0BQ,EAA1BR,KAAMC,EAAoBO,EAApBP,MAAOC,EAAaM,EAAbN,SAErB,OACI,kBAAMG,SAAUK,EAAcd,UAAWC,EAAzC,WACK,SAACc,EAAA,GAAD,QAAWC,MAAOZ,EAAMa,SAAUJ,GAAkBK,EAAAA,QACrD,SAACH,EAAA,GAAD,QAAWC,MAAOX,EAAOY,SAAUJ,GAAkBK,EAAAA,SACrD,SAACH,EAAA,GAAD,QAAWC,MAAOV,EAAUW,SAAUJ,GAAkBK,EAAAA,YACxD,SAACC,EAAA,EAAD,yBAGX,ECED,EAfqB,WACjB,IAAMC,GAAWC,EAAAA,EAAAA,MAMjB,OACK,iBAAKrB,UAAU,YAAf,WACG,eAAIA,UAAWC,EAAf,4BACD,SAAC,EAAD,CAAcQ,SAPF,SAACa,GAChBF,GAASG,EAAAA,EAAAA,IAASD,GACrB,MAQJ,C,kECED,IAnBgB,SAAC,GAAgC,IAA9BX,EAA6B,EAA7BA,aAAcF,EAAe,EAAfA,SAC/B,GAA0Be,EAAAA,EAAAA,WAAS,UAAKb,IAAxC,eAAOC,EAAP,KAAca,EAAd,KAeA,MAAO,CAAEb,MAAAA,EAAOa,SAAAA,EAAUZ,aAbL,SAAC,GAAgB,IAAda,EAAa,EAAbA,OACtBD,GAAS,SAAAE,GACP,IAAQvB,EAA+BsB,EAA/BtB,KAAMY,EAAyBU,EAAzBV,MAAOY,EAAkBF,EAAlBE,QACfC,EAAoB,aADaH,EAAT5B,KACS8B,EAAUZ,EACjD,OAAO,kBAAKW,GAAZ,cAAwBvB,EAAOyB,GAChC,GACF,EAOuCf,aALnB,SAAAgB,GACnBA,EAAEC,iBACFtB,GAAS,UAAKG,IACda,GAAS,UAAKd,GACf,EAEF,C","sources":["webpack://practic-react/./src/components/Button/button.module.scss?3bf9","components/Button/Button.jsx","webpack://practic-react/./src/components/TextField/text-field.module.scss?0500","components/TextField/TextField.jsx","webpack://practic-react/./src/pages/RegisterPage/register-page.module.scss?9fb0","components/modules/RegisterForm/initialState.js","components/modules/RegisterForm/fields.js","webpack://practic-react/./src/components/modules/RegisterForm/register-form.module.scss?e94d","components/modules/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx","shared/hooks/useForm.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"button_btn__YVOtd\"};","\nimport styles from './button.module.scss';\n\nconst Button = ({type = 'submit', children}) => {\n    return <button className={styles.btn} type={type}>{children}</button>\n}\n\nexport default Button;","// extracted by mini-css-extract-plugin\nexport default {\"formGroup\":\"text-field_formGroup__xQKHd\",\"field\":\"text-field_field__FHb49\"};","import styles from './text-field.module.scss';\n\nconst TextField = ({ label, ...props }) => {\n    return (\n        <div className={styles.formGroup}>\n            <label>{label}</label>\n            <input className={styles.field} {...props}/>\n        </div>\n    )\n}\n\nexport default TextField;","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"register-page_title__-xAdx\"};","const initialState = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nexport default initialState;\n","const fields = {\n  name: {\n    label: 'User name',\n    name: 'name',\n    type: 'text',\n    required: true,\n    placeholder: 'User name',\n  },\n  email: {\n    label: 'User email',\n    name: 'email',\n    type: 'email',\n    required: true,\n    placeholder: 'User email',\n  },\n  password: {\n    label: 'User password',\n    name: 'password',\n    type: 'password',\n    required: true,\n    placeholder: 'User password',\n  },\n};\n\nexport default fields;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"register-form_form__oHo3G\"};","import useForm from \"shared/hooks/useForm\"\nimport Button from \"components/Button/Button\"\nimport TextField from \"components/TextField/TextField\"\nimport initialState from \"./initialState\"\nimport fields from \"./fields\"\nimport styles from './register-form.module.scss'\nconst RegisterForm = ({ onSubmit }) => {\n    const { state, handleChange, handleSubmit } = useForm({initialState, onSubmit});\n\n    const { name, email, password } = state;\n\n    return (\n        <form onSubmit={handleSubmit} className={styles.form}>\n             <TextField value={name} onChange={handleChange} {...fields.name} />\n            <TextField value={email} onChange={handleChange} {...fields.email} />\n            <TextField value={password} onChange={handleChange} {...fields.password} />\n            <Button>Register</Button>\n        </form> \n)\n}\n\nexport default RegisterForm;","\nimport { useDispatch } from 'react-redux';\nimport styles from './register-page.module.scss';\nimport { register } from '../../redux/auth/auth-operations';\nimport RegisterForm from 'components/modules/RegisterForm/RegisterForm';\n\nconst RegisterPage = () => {\n    const dispatch = useDispatch();\n\n    const onRegister = (data) => {\n        dispatch(register(data));\n    }\n\n    return (\n         <div className=\"container\">\n            <h1 className={styles.title}>Register page</h1>\n           <RegisterForm onSubmit={onRegister} />\n    </div>\n    )\n}\n\nexport default RegisterPage;","import { useState } from 'react';\n\nconst useForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = ({ target }) => {\n    setState(prevState => {\n      const { name, value, checked, type } = target;\n      const newValue = type === 'checkbox' ? checked : value;\n      return { ...prevState, [name]: newValue };\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n  return { state, setState, handleChange, handleSubmit };\n};\n\nexport default useForm;\n"],"names":["type","children","className","styles","label","props","name","email","password","required","placeholder","onSubmit","useForm","initialState","state","handleChange","handleSubmit","TextField","value","onChange","fields","Button","dispatch","useDispatch","data","register","useState","setState","target","prevState","checked","newValue","e","preventDefault"],"sourceRoot":""}